name: Build ESPHome Firmware

on:
  issues:
    types: [opened, edited]
  

jobs:
  build:
    if: contains(github.event.issue.labels.*.name, 'esphome')
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

    - name: Install ESPHome
      run: |
        python -m pip install esphome

    - name: Read user input from issue
      id: user_input
      run: |
        issue_number=${{ github.event.issue.number }}
        device_name=$(gh issue view $issue_number --json body -q '.body' | grep -oP '(?<=Device Name: )\S+')
        static_ip=$(gh issue view $issue_number --json body -q '.body' | grep -oP '(?<=Static IP: )\S+')
        gateway=$(gh issue view $issue_number --json body -q '.body' | grep -oP '(?<=Gateway: )\S+')
        subnet=$(gh issue view $issue_number --json body -q '.body' | grep -oP '(?<=Subnet: )\S+')
        echo "::set-output name=device_name::$device_name"
        echo "::set-output name=static_ip::$static_ip"
        echo "::set-output name=gateway::$gateway"
        echo "::set-output name=subnet::$subnet"

    - name: Update ESPHome YAML
      run: |
        device_yaml="esphome_config/${{ steps.user_input.outputs.device_name }}.yaml"
        sed -i "s/STATIC_IP/${{ steps.user_input.outputs.static_ip }}/" $device_yaml
        sed -i "s/GATEWAY/${{ steps.user_input.outputs.gateway }}/" $device_yaml
        sed -i "s/SUBNET/${{ steps.user_input.outputs.subnet }}/" $device_yaml

    - name: Compile ESPHome Firmware
      run: |
        device_yaml="esphome_config/${{ steps.user_input.outputs.device_name }}.yaml"
        esphome compile $device_yaml

    - name: Upload Firmware
      uses: actions/upload-artifact@v2
      with:
        name: firmware
        path: esphome_config/.esphome/build/*.bin
